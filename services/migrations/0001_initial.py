# Generated by Django 5.2 on 2025-05-01 06:56

import django.core.validators
import django.db.models.deletion
import smart_selects.db_fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('district_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('district_name', models.CharField(help_text='Enter the name of the district.', max_length=100, unique=True, verbose_name='District Name')),
                ('slug', models.SlugField(help_text='URL-friendly identifier for the district.', unique=True)),
            ],
            options={
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('service_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_name', models.CharField(help_text='Enter the name of the service offered.', max_length=100, unique=True, verbose_name='Service Name')),
                ('slug', models.SlugField(help_text='URL-friendly identifier for the service.', unique=True)),
            ],
            options={
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('location_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location_name', models.CharField(help_text='Enter the name of the location/area.', max_length=100, unique=True, verbose_name='Location Name')),
                ('slug', models.SlugField(help_text='URL-friendly identifier for the location.', unique=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='services.district', verbose_name='District')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('lead_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lead_name', models.CharField(help_text='Enter the full name of the customer.', max_length=100, verbose_name='Lead Name')),
                ('phone_number', models.CharField(db_index=True, help_text='Enter a valid 10-digit phone number.', max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits', regex='^\\d{10}$')], verbose_name='Phone Number')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leads', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='services.district', verbose_name='District')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='services.location', verbose_name='Location')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='services.service', verbose_name='Service Requested')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('vendor_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vendor_name', models.CharField(max_length=100, verbose_name='Vendor Name')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='services.district')),
                ('location', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='district', chained_model_field='district', on_delete=django.db.models.deletion.CASCADE, related_name='vendor_locations', to='services.location', verbose_name='Location')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
